{
  "name": "chartifact",
  "displayName": "Chartifact",
  "description": "Declarative, interactive data documents",
  "version": "1.0.7",
  "publisher": "msrvida",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/microsoft/chartifact.git"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/microsoft/chartifact/issues"
  },
  "homepage": "https://github.com/microsoft/chartifact#readme",
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "Other",
    "Visualization"
  ],
  "keywords": [
    "data visualization",
    "dataviz"
  ],
  "activationEvents": [],
  "browser": "./dist/web/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "chartifact.newIdocJson",
        "title": "New Chartifact Interactive Document (json)",
        "category": "Chartifact Interactive Documents"
      },
      {
        "command": "chartifact.newIdocMarkdown",
        "title": "New Chartifact Interactive Document (markdown)",
        "category": "Chartifact Interactive Documents"
      },
      {
        "command": "chartifact.previewIdoc",
        "title": "Preview Chartifact Interactive Document",
        "category": "Chartifact Interactive Documents"
      },
      {
        "command": "chartifact.convertToHtml",
        "title": "Convert to HTML",
        "category": "Chartifact Interactive Documents"
      },
      {
        "command": "chartifact.convertToMarkdown",
        "title": "Convert to Markdown",
        "category": "Chartifact Interactive Documents"
      },
      {
        "command": "chartifact.createExamplesFolder",
        "title": "Create Chartifact Examples Folder",
        "category": "Chartifact Interactive Documents"
      },
      {
        "command": "chartifact.previewIdocSplit",
        "title": "Preview Chartifact Interactive Document (Split View)",
        "category": "Chartifact Interactive Documents",
        "icon": "$(preview)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "chartifact.newIdocJson",
          "when": "explorerResourceIsFolder",
          "group": "chartifact"
        },
        {
          "command": "chartifact.newIdocMarkdown",
          "when": "explorerResourceIsFolder",
          "group": "chartifact"
        },
        {
          "command": "chartifact.previewIdoc",
          "when": "resourceExtname == .md && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.md$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.previewIdoc",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.json$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.convertToHtml",
          "when": "resourceExtname == .md && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.md$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.convertToHtml",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.json$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.convertToMarkdown",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.json$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.createExamplesFolder",
          "when": "explorerResourceIsFolder",
          "group": "chartifact"
        }
      ],
      "editor/title": [
        {
          "command": "chartifact.previewIdocSplit",
          "when": "resourceExtname == .md && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.md$/",
          "group": "navigation"
        },
        {
          "command": "chartifact.previewIdocSplit",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.json$/",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "chartifact.previewIdoc",
          "when": "resourceExtname == .md && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.md$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.previewIdoc",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.json$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.convertToHtml",
          "when": "resourceExtname == .md && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.md$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.convertToHtml",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.json$/",
          "group": "chartifact"
        },
        {
          "command": "chartifact.convertToMarkdown",
          "when": "resourceExtname == .json && resourceFilename =~ /\\.idoc(( copy( \\d+)?)|(\\s\\(\\d+\\)))?\\.json$/",
          "group": "chartifact"
        }
      ]
    }
  },
  "scripts": {
    "resources": "node ./scripts/resources.mjs",
    "clean": "rimraf resources dist",
    "test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/extensionTests.js",
    "pretest": "npm run compile-web",
    "vscode:prepublish": "npm run package-web",
    "prebuild": "npm run resources",
    "build": "npm run resources && npm run compile-web",
    "build:08": "npm run build",
    "compile-web": "npm run check-types && npm run lint && npm run resources && node esbuild.js",
    "watch-web": "npm-run-all -p watch-web:*",
    "watch-web:esbuild": "node esbuild.js --watch",
    "watch-web:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package-web": "npm run check-types && npm run lint && npm run resources && node esbuild.js --production",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .",
    "package": "vsce package",
    "prepackage": "npm run package-web",
    "postpackage": "node ./scripts/move-package.mjs"
  },
  "devDependencies": {
    "@vscode/vsce": "^3.6.0"
  }
}
